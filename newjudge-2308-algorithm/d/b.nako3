# グラフは隣接グラフ
# 始点は0-indexed
●(Nのグラフで始点から)幅優先探索とは
  距離=[]
  nを0からN-1まで繰り返す。
    距離[n]は-1。
  ここまで。
  距離[始点]は0。
  キュー=[始点]
  トップ=0
  トップが、(キューの配列要素数)未満の間
    uはキュー[トップ]。
    トップ=トップ+1  # pop
    グラフ[u]を反復
      vは対象
      もし距離[v]<0ならば
        距離[v] = 距離[u] + 1
        キューにvを配列追加  # push
      ここまで。
    ここまで。
  ここまで
  距離を戻す。
ここまで

「」と尋ねて「 」で区切り、入力行に代入する。
入力行[0]を整数変換して、N1に代入する。
入力行[1]を整数変換して、N2に代入する。
入力行[2]を整数変換して、Mに代入する。

グラフ=[]
nを0からN1+N2-1まで繰り返す。
  グラフ[n] = []
ここまで。

mを0からM-1まで1ずつ増やし繰り返す
  「」と尋ねて「 」で区切り、入力行に代入する。
  入力行[0]を整数変換して、1を引き、Aに代入する。
  入力行[1]を整数変換して、1を引き、Bに代入する。
  グラフ[A]にBを配列追加。
  グラフ[B]にAを配列追加。
ここまで。

N1+N2のグラフで0から幅優先探索して、距離0に代入する。
N1+N2のグラフでN1+N2-1から幅優先探索して、距離1に代入する。
(距離0の配列最大値) + (距離1の配列最大値) + 1 を表示。
